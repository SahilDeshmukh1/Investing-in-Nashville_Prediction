{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "73e28e28-d3bd-4c80-9134-b3acc09a001e",
   "metadata": {},
   "source": [
    "## Title Page:\n",
    "\n",
    "**College of Professional Studies, Northeastern University**  \n",
    "**ALY6020**  \n",
    "**Professor Ajit Appari**  \n",
    "**October 17th, 2024**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8036ae56-b285-4540-9cd4-57bcd0c22829",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8c862697-ff0e-4b2f-ae9e-525d96cc168f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('/Users/sahildeshmukh/Downloads/week 4 - Nashville_housing_data.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36b9564e-25ce-4cb2-9e75-10e2fc59f14c",
   "metadata": {},
   "source": [
    "### PART 1: EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7b3ded6f-1533-4c83-9632-cc23369d9bbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Parcel ID</th>\n",
       "      <th>Land Use</th>\n",
       "      <th>Property Address</th>\n",
       "      <th>Suite/ Condo   #</th>\n",
       "      <th>Property City</th>\n",
       "      <th>Sale Date</th>\n",
       "      <th>Legal Reference</th>\n",
       "      <th>Sold As Vacant</th>\n",
       "      <th>Multiple Parcels Involved in Sale</th>\n",
       "      <th>...</th>\n",
       "      <th>Building Value</th>\n",
       "      <th>Finished Area</th>\n",
       "      <th>Foundation Type</th>\n",
       "      <th>Year Built</th>\n",
       "      <th>Exterior Wall</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Bedrooms</th>\n",
       "      <th>Full Bath</th>\n",
       "      <th>Half Bath</th>\n",
       "      <th>Sale Price Compared To Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>105 11 0 080.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>1802  STEWART PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/11/2013</td>\n",
       "      <td>20130118-0006337</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>134400</td>\n",
       "      <td>1149.00000</td>\n",
       "      <td>PT BSMT</td>\n",
       "      <td>1941</td>\n",
       "      <td>BRICK</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Over</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>118 03 0 130.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2761  ROSEDALE PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/18/2013</td>\n",
       "      <td>20130124-0008033</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>157800</td>\n",
       "      <td>2090.82495</td>\n",
       "      <td>SLAB</td>\n",
       "      <td>2000</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Over</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>119 01 0 479.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>224  PEACHTREE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/18/2013</td>\n",
       "      <td>20130128-0008863</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>243700</td>\n",
       "      <td>2145.60001</td>\n",
       "      <td>FULL BSMT</td>\n",
       "      <td>1948</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>B</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>119 05 0 186.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>316  LUTIE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/23/2013</td>\n",
       "      <td>20130131-0009929</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>138100</td>\n",
       "      <td>1969.00000</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1910</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>119 05 0 387.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2626  FOSTER AVE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/4/2013</td>\n",
       "      <td>20130118-0006110</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>86100</td>\n",
       "      <td>1037.00000</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1945</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0        Parcel ID       Land Use   Property Address  \\\n",
       "0           1  105 11 0 080.00  SINGLE FAMILY   1802  STEWART PL   \n",
       "1           2  118 03 0 130.00  SINGLE FAMILY  2761  ROSEDALE PL   \n",
       "2           3  119 01 0 479.00  SINGLE FAMILY  224  PEACHTREE ST   \n",
       "3           4  119 05 0 186.00  SINGLE FAMILY      316  LUTIE ST   \n",
       "4           5  119 05 0 387.00  SINGLE FAMILY   2626  FOSTER AVE   \n",
       "\n",
       "   Suite/ Condo   # Property City  Sale Date   Legal Reference Sold As Vacant  \\\n",
       "0               NaN     NASHVILLE  1/11/2013  20130118-0006337             No   \n",
       "1               NaN     NASHVILLE  1/18/2013  20130124-0008033             No   \n",
       "2               NaN     NASHVILLE  1/18/2013  20130128-0008863             No   \n",
       "3               NaN     NASHVILLE  1/23/2013  20130131-0009929             No   \n",
       "4               NaN     NASHVILLE   1/4/2013  20130118-0006110             No   \n",
       "\n",
       "  Multiple Parcels Involved in Sale  ... Building Value Finished Area  \\\n",
       "0                                No  ...         134400    1149.00000   \n",
       "1                                No  ...         157800    2090.82495   \n",
       "2                                No  ...         243700    2145.60001   \n",
       "3                                No  ...         138100    1969.00000   \n",
       "4                                No  ...          86100    1037.00000   \n",
       "\n",
       "   Foundation Type Year Built  Exterior Wall  Grade  Bedrooms  Full Bath  \\\n",
       "0          PT BSMT       1941          BRICK   C          2.0        1.0   \n",
       "1             SLAB       2000    BRICK/FRAME   C          3.0        2.0   \n",
       "2        FULL BSMT       1948    BRICK/FRAME   B          4.0        2.0   \n",
       "3            CRAWL       1910          FRAME   C          2.0        1.0   \n",
       "4            CRAWL       1945          FRAME   C          2.0        1.0   \n",
       "\n",
       "  Half Bath  Sale Price Compared To Value  \n",
       "0       0.0                          Over  \n",
       "1       1.0                          Over  \n",
       "2       0.0                         Under  \n",
       "3       0.0                         Under  \n",
       "4       0.0                         Under  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c9005810-70f5-42b1-9396-67c1204e45fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>Parcel ID</th>\n",
       "      <th>Land Use</th>\n",
       "      <th>Property Address</th>\n",
       "      <th>Suite/ Condo   #</th>\n",
       "      <th>Property City</th>\n",
       "      <th>Sale Date</th>\n",
       "      <th>Legal Reference</th>\n",
       "      <th>Sold As Vacant</th>\n",
       "      <th>Multiple Parcels</th>\n",
       "      <th>...</th>\n",
       "      <th>Building Value</th>\n",
       "      <th>Finished Area</th>\n",
       "      <th>Foundation Type</th>\n",
       "      <th>Year Built</th>\n",
       "      <th>Exterior Wall</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Bedrooms</th>\n",
       "      <th>Full Bath</th>\n",
       "      <th>Half Bath</th>\n",
       "      <th>Sale Price Compared to Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>105 11 0 080.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>1802  STEWART PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/11/2013</td>\n",
       "      <td>20130118-0006337</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>134400</td>\n",
       "      <td>1149.00000</td>\n",
       "      <td>PT BSMT</td>\n",
       "      <td>1941</td>\n",
       "      <td>BRICK</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Over</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>118 03 0 130.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2761  ROSEDALE PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/18/2013</td>\n",
       "      <td>20130124-0008033</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>157800</td>\n",
       "      <td>2090.82495</td>\n",
       "      <td>SLAB</td>\n",
       "      <td>2000</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Over</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>119 01 0 479.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>224  PEACHTREE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/18/2013</td>\n",
       "      <td>20130128-0008863</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>243700</td>\n",
       "      <td>2145.60001</td>\n",
       "      <td>FULL BSMT</td>\n",
       "      <td>1948</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>B</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>119 05 0 186.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>316  LUTIE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/23/2013</td>\n",
       "      <td>20130131-0009929</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>138100</td>\n",
       "      <td>1969.00000</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1910</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>119 05 0 387.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2626  FOSTER AVE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>1/4/2013</td>\n",
       "      <td>20130118-0006110</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>86100</td>\n",
       "      <td>1037.00000</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1945</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Under</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Index        Parcel ID       Land Use   Property Address  Suite/ Condo   #  \\\n",
       "0      1  105 11 0 080.00  SINGLE FAMILY   1802  STEWART PL               NaN   \n",
       "1      2  118 03 0 130.00  SINGLE FAMILY  2761  ROSEDALE PL               NaN   \n",
       "2      3  119 01 0 479.00  SINGLE FAMILY  224  PEACHTREE ST               NaN   \n",
       "3      4  119 05 0 186.00  SINGLE FAMILY      316  LUTIE ST               NaN   \n",
       "4      5  119 05 0 387.00  SINGLE FAMILY   2626  FOSTER AVE               NaN   \n",
       "\n",
       "  Property City  Sale Date   Legal Reference Sold As Vacant Multiple Parcels  \\\n",
       "0     NASHVILLE  1/11/2013  20130118-0006337             No               No   \n",
       "1     NASHVILLE  1/18/2013  20130124-0008033             No               No   \n",
       "2     NASHVILLE  1/18/2013  20130128-0008863             No               No   \n",
       "3     NASHVILLE  1/23/2013  20130131-0009929             No               No   \n",
       "4     NASHVILLE   1/4/2013  20130118-0006110             No               No   \n",
       "\n",
       "   ... Building Value Finished Area  Foundation Type Year Built  \\\n",
       "0  ...         134400    1149.00000          PT BSMT       1941   \n",
       "1  ...         157800    2090.82495             SLAB       2000   \n",
       "2  ...         243700    2145.60001        FULL BSMT       1948   \n",
       "3  ...         138100    1969.00000            CRAWL       1910   \n",
       "4  ...          86100    1037.00000            CRAWL       1945   \n",
       "\n",
       "   Exterior Wall  Grade  Bedrooms  Full Bath Half Bath  \\\n",
       "0          BRICK   C          2.0        1.0       0.0   \n",
       "1    BRICK/FRAME   C          3.0        2.0       1.0   \n",
       "2    BRICK/FRAME   B          4.0        2.0       0.0   \n",
       "3          FRAME   C          2.0        1.0       0.0   \n",
       "4          FRAME   C          2.0        1.0       0.0   \n",
       "\n",
       "   Sale Price Compared to Value  \n",
       "0                          Over  \n",
       "1                          Over  \n",
       "2                         Under  \n",
       "3                         Under  \n",
       "4                         Under  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename the columns for better readability if necessary\n",
    "df.rename(columns={\n",
    "    'Unnamed: 0': 'Index',\n",
    "    'Parcel ID': 'Parcel ID',\n",
    "    'Land Use': 'Land Use',\n",
    "    'Property Address': 'Property Address',\n",
    "    'Suite/ Condo #': 'Suite/Condo',\n",
    "    'Property City': 'Property City',\n",
    "    'Sale Date': 'Sale Date',\n",
    "    'Legal Reference': 'Legal Reference',\n",
    "    'Sold As Vacant': 'Sold As Vacant',\n",
    "    'Multiple Parcels Involved in Sale': 'Multiple Parcels',\n",
    "    'Building Value': 'Building Value',\n",
    "    'Finished Area': 'Finished Area',\n",
    "    'Foundation Type': 'Foundation Type',\n",
    "    'Year Built': 'Year Built',\n",
    "    'Exterior Wall': 'Exterior Wall',\n",
    "    'Grade': 'Grade',\n",
    "    'Bedrooms': 'Bedrooms',\n",
    "    'Full Bath': 'Full Bath',\n",
    "    'Half Bath': 'Half Bath',\n",
    "    'Sale Price Compared To Value': 'Sale Price Compared to Value'\n",
    "}, inplace=True)\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5675f898-332e-4dd8-96aa-23c95d4737b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Summary statistics:\n",
      "              Index  Suite/ Condo   #       Acreage  Neighborhood  \\\n",
      "count  22651.000000               0.0  22651.000000  22651.000000   \n",
      "mean   27889.491192               NaN      0.454705   4432.715024   \n",
      "std    16598.865706               NaN      0.611818   2142.803595   \n",
      "min        1.000000               NaN      0.040000    107.000000   \n",
      "25%    13324.500000               NaN      0.200000   3130.000000   \n",
      "50%    27712.000000               NaN      0.280000   4026.000000   \n",
      "75%    42330.500000               NaN      0.460000   6229.000000   \n",
      "max    56615.000000               NaN     17.500000   9530.000000   \n",
      "\n",
      "         Land Value  Building Value  Finished Area    Year Built  \\\n",
      "count  2.265100e+04    2.265100e+04   22650.000000  22651.000000   \n",
      "mean   7.013797e+04    1.722402e+05    1915.377151   1961.947684   \n",
      "std    1.029035e+05    1.896424e+05    1079.094521     25.843908   \n",
      "min    9.000000e+02    1.400000e+03     450.000000   1832.000000   \n",
      "25%    2.200000e+04    8.550000e+04    1250.000000   1947.000000   \n",
      "50%    3.000000e+04    1.188000e+05    1645.824995   1959.000000   \n",
      "75%    6.030000e+04    1.882500e+05    2213.375000   1977.000000   \n",
      "max    1.869000e+06    5.824300e+06   19728.249880   2017.000000   \n",
      "\n",
      "           Bedrooms     Full Bath     Half Bath  \n",
      "count  22648.000000  22650.000000  22543.000000  \n",
      "mean       3.104910      1.887285      0.270239  \n",
      "std        0.829287      0.951220      0.480186  \n",
      "min        0.000000      0.000000      0.000000  \n",
      "25%        3.000000      1.000000      0.000000  \n",
      "50%        3.000000      2.000000      0.000000  \n",
      "75%        4.000000      2.000000      1.000000  \n",
      "max       11.000000     10.000000      3.000000  \n"
     ]
    }
   ],
   "source": [
    "# Display the summary statistics of numerical columns\n",
    "print(\"\\nSummary statistics:\")\n",
    "print(df.describe())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ee1054ef-d173-4e02-9fc7-15f8a1664b62",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Unique value counts for Land Use:\n",
      "| Land Use               |   Count |\n",
      "|:-----------------------|--------:|\n",
      "| SINGLE FAMILY          |   21390 |\n",
      "| DUPLEX                 |    1190 |\n",
      "| RESIDENTIAL COMBO/MISC |      37 |\n",
      "| QUADPLEX               |      34 |\n",
      "\n",
      "Unique value counts for Property City:\n",
      "| Property City   |   Count |\n",
      "|:----------------|--------:|\n",
      "| NASHVILLE       |   18010 |\n",
      "| MADISON         |    1146 |\n",
      "| ANTIOCH         |    1133 |\n",
      "| HERMITAGE       |     913 |\n",
      "| OLD HICKORY     |     824 |\n",
      "| GOODLETTSVILLE  |     435 |\n",
      "| BRENTWOOD       |     158 |\n",
      "| WHITES CREEK    |      13 |\n",
      "| JOELTON         |      11 |\n",
      "| MOUNT JULIET    |       6 |\n",
      "\n",
      "Unique value counts for Sold As Vacant:\n",
      "| Sold As Vacant   |   Count |\n",
      "|:-----------------|--------:|\n",
      "| No               |   22517 |\n",
      "| Yes              |     134 |\n",
      "\n",
      "Unique value counts for Multiple Parcels:\n",
      "| Multiple Parcels   |   Count |\n",
      "|:-------------------|--------:|\n",
      "| No                 |   22183 |\n",
      "| Yes                |     468 |\n",
      "\n",
      "Unique value counts for Foundation Type:\n",
      "| Foundation Type   |   Count |\n",
      "|:------------------|--------:|\n",
      "| CRAWL             |   14210 |\n",
      "| FULL BSMT         |    3823 |\n",
      "| PT BSMT           |    3146 |\n",
      "| SLAB              |    1431 |\n",
      "| PIERS             |      36 |\n",
      "| TYPICAL           |       4 |\n",
      "\n",
      "Unique value counts for Exterior Wall:\n",
      "| Exterior Wall   |   Count |\n",
      "|:----------------|--------:|\n",
      "| BRICK           |   11547 |\n",
      "| FRAME           |    8171 |\n",
      "| BRICK/FRAME     |    2222 |\n",
      "| STONE           |     329 |\n",
      "| STUCCO          |     156 |\n",
      "| FRAME/STONE     |     104 |\n",
      "| CONC BLK        |      99 |\n",
      "| LOG             |      15 |\n",
      "| METAL           |       8 |\n",
      "\n",
      "Unique value counts for Grade:\n",
      "| Grade   |   Count |\n",
      "|:--------|--------:|\n",
      "| C       |   16235 |\n",
      "| B       |    3395 |\n",
      "| D       |    1929 |\n",
      "| A       |     549 |\n",
      "| X       |     482 |\n",
      "| E       |      57 |\n",
      "| SSC     |       1 |\n",
      "| OFC     |       1 |\n",
      "| AAB     |       1 |\n",
      "| OFB     |       1 |\n",
      "\n",
      "Unique value counts for Sale Price Compared to Value:\n",
      "| Sale Price Compared to Value   |   Count |\n",
      "|:-------------------------------|--------:|\n",
      "| Over                           |   17047 |\n",
      "| Under                          |    5604 |\n"
     ]
    }
   ],
   "source": [
    "# List of categorical columns\n",
    "categorical_columns = ['Land Use', 'Property City', 'Sold As Vacant', 'Multiple Parcels', \n",
    "                       'Foundation Type', 'Exterior Wall', 'Grade', 'Sale Price Compared to Value']\n",
    "value_counts_tables = {}\n",
    "for col in categorical_columns:\n",
    "    value_counts = df[col].value_counts()\n",
    "    value_counts_table = pd.DataFrame(value_counts).reset_index()\n",
    "    value_counts_table.columns = [col, 'Count']  \n",
    "    value_counts_tables[col] = value_counts_table\n",
    "\n",
    "for col, table in value_counts_tables.items():\n",
    "    print(f\"\\nUnique value counts for {col}:\")\n",
    "    print(table.to_markdown(index=False))  \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "592cd45e-4793-4bb6-9627-7894d26c6db6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Missing values per column:\n",
      "Index                               0\n",
      "Parcel ID                           0\n",
      "Land Use                            0\n",
      "Property Address                    2\n",
      "Suite/ Condo   #                22651\n",
      "Property City                       2\n",
      "Sale Date                           0\n",
      "Legal Reference                     0\n",
      "Sold As Vacant                      0\n",
      "Multiple Parcels                    0\n",
      "City                                0\n",
      "State                               0\n",
      "Acreage                             0\n",
      "Tax District                        0\n",
      "Neighborhood                        0\n",
      "Land Value                          0\n",
      "Building Value                      0\n",
      "Finished Area                       1\n",
      "Foundation Type                     1\n",
      "Year Built                          0\n",
      "Exterior Wall                       0\n",
      "Grade                               0\n",
      "Bedrooms                            3\n",
      "Full Bath                           1\n",
      "Half Bath                         108\n",
      "Sale Price Compared to Value        0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check for missing values\n",
    "print(\"\\nMissing values per column:\")\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5d2fdd4f-449e-4426-84cc-7ea9f0156499",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column names in the DataFrame:\n",
      "Index(['Index', 'Parcel ID', 'Land Use', 'Property Address',\n",
      "       'Suite/ Condo   #', 'Property City', 'Sale Date', 'Legal Reference',\n",
      "       'Sold As Vacant', 'Multiple Parcels', 'City', 'State', 'Acreage',\n",
      "       'Tax District', 'Neighborhood', 'Land Value', 'Building Value',\n",
      "       'Finished Area', 'Foundation Type', 'Year Built', 'Exterior Wall',\n",
      "       'Grade', 'Bedrooms', 'Full Bath', 'Half Bath',\n",
      "       'Sale Price Compared to Value'],\n",
      "      dtype='object')\n",
      "Column 'Suite/ Condo #' not found in the DataFrame.\n"
     ]
    }
   ],
   "source": [
    "# Dropping unwanted columns\n",
    "print(\"Column names in the DataFrame:\")\n",
    "print(df.columns)\n",
    "df.columns = df.columns.str.strip()\n",
    "if 'Suite/ Condo #' in df.columns:\n",
    "    df.drop(columns=['Suite/ Condo #'], inplace=True)\n",
    "else:\n",
    "    print(\"Column 'Suite/ Condo #' not found in the DataFrame.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "20c1cd8c-b22d-4624-a5ef-fc55005f5e7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Handling missing values\n",
    "df['Property Address'] = df['Property Address'].fillna('Unknown')  \n",
    "df['Property City'] = df['Property City'].fillna('Unknown')       \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "bfff9e4e-f348-4692-90c8-e6fd6e2465b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filling numerical columns with median\n",
    "df['Finished Area'] = df['Finished Area'].fillna(df['Finished Area'].median())\n",
    "df['Foundation Type'] = df['Foundation Type'].fillna(df['Foundation Type'].mode()[0])\n",
    "df['Bedrooms'] = df['Bedrooms'].fillna(df['Bedrooms'].median())\n",
    "df['Full Bath'] = df['Full Bath'].fillna(df['Full Bath'].median())\n",
    "df['Half Bath'] = df['Half Bath'].fillna(df['Half Bath'].median())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1398f3e4-3208-4514-b1be-e8d22e93d482",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 2: Handling Outliers\n",
    "# Removing rows where \"Acreage\" is abnormally high (e.g., above 5 acres for residential)\n",
    "df = df[df['Acreage'] <= 5]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d7bbac22-5ee2-4bbb-9631-bd95129dbca9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 4: Remove Duplicates\n",
    "# Checking and removing duplicate rows\n",
    "df.drop_duplicates(inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "56730921-8dda-4e73-b26b-f017c6056479",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 5: Convert Data Types\n",
    "# Converting 'Sale Date' to datetime format\n",
    "df['Sale Date'] = pd.to_datetime(df['Sale Date'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d2ac02ee-b85b-449c-9ed6-b3d476784b02",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 6: Creating New Features\n",
    "# Creating \"Property Age\" based on \"Year Built\"\n",
    "df['Property Age'] = 2024 - df['Year Built']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "39fc49f5-4c5c-4c90-b71e-e0618b570c66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Remaining missing values in each column:\n",
      " Index                               0\n",
      "Parcel ID                           0\n",
      "Land Use                            0\n",
      "Property Address                    0\n",
      "Suite/ Condo   #                22582\n",
      "Property City                       0\n",
      "Sale Date                           0\n",
      "Legal Reference                     0\n",
      "Sold As Vacant                      0\n",
      "Multiple Parcels                    0\n",
      "City                                0\n",
      "State                               0\n",
      "Acreage                             0\n",
      "Tax District                        0\n",
      "Neighborhood                        0\n",
      "Land Value                          0\n",
      "Building Value                      0\n",
      "Finished Area                       0\n",
      "Foundation Type                     0\n",
      "Year Built                          0\n",
      "Exterior Wall                       0\n",
      "Grade                               0\n",
      "Bedrooms                            0\n",
      "Full Bath                           0\n",
      "Half Bath                           0\n",
      "Sale Price Compared to Value        0\n",
      "Property Age                        0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Step 7: Standardize Numerical Features \n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "# List of numerical columns to scale\n",
    "numerical_columns = ['Land Value', 'Building Value', 'Finished Area', 'Acreage', 'Bedrooms', 'Full Bath', 'Half Bath', 'Property Age']\n",
    "scaler = StandardScaler()\n",
    "df[numerical_columns] = scaler.fit_transform(df[numerical_columns])\n",
    "\n",
    "# Final step to Ensure no remaining missing values\n",
    "print(\"Remaining missing values in each column:\\n\", df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "625b4d46-39e7-4316-8ac5-00cda815e590",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>Parcel ID</th>\n",
       "      <th>Land Use</th>\n",
       "      <th>Property Address</th>\n",
       "      <th>Suite/ Condo   #</th>\n",
       "      <th>Property City</th>\n",
       "      <th>Sale Date</th>\n",
       "      <th>Legal Reference</th>\n",
       "      <th>Sold As Vacant</th>\n",
       "      <th>Multiple Parcels</th>\n",
       "      <th>...</th>\n",
       "      <th>Finished Area</th>\n",
       "      <th>Foundation Type</th>\n",
       "      <th>Year Built</th>\n",
       "      <th>Exterior Wall</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Bedrooms</th>\n",
       "      <th>Full Bath</th>\n",
       "      <th>Half Bath</th>\n",
       "      <th>Sale Price Compared to Value</th>\n",
       "      <th>Property Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>105 11 0 080.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>1802  STEWART PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>2013-01-11</td>\n",
       "      <td>20130118-0006337</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.711699</td>\n",
       "      <td>PT BSMT</td>\n",
       "      <td>1941</td>\n",
       "      <td>BRICK</td>\n",
       "      <td>C</td>\n",
       "      <td>-1.334877</td>\n",
       "      <td>-0.934021</td>\n",
       "      <td>-0.561240</td>\n",
       "      <td>Over</td>\n",
       "      <td>0.810072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>118 03 0 130.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2761  ROSEDALE PL</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>2013-01-18</td>\n",
       "      <td>20130124-0008033</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0.169879</td>\n",
       "      <td>SLAB</td>\n",
       "      <td>2000</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>-0.124024</td>\n",
       "      <td>0.123862</td>\n",
       "      <td>1.528787</td>\n",
       "      <td>Over</td>\n",
       "      <td>-1.473516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>119 01 0 479.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>224  PEACHTREE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>2013-01-18</td>\n",
       "      <td>20130128-0008863</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0.221151</td>\n",
       "      <td>FULL BSMT</td>\n",
       "      <td>1948</td>\n",
       "      <td>BRICK/FRAME</td>\n",
       "      <td>B</td>\n",
       "      <td>1.086829</td>\n",
       "      <td>0.123862</td>\n",
       "      <td>-0.561240</td>\n",
       "      <td>Under</td>\n",
       "      <td>0.539138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>119 05 0 186.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>316  LUTIE ST</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>2013-01-23</td>\n",
       "      <td>20130131-0009929</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>0.055847</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1910</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>-1.334877</td>\n",
       "      <td>-0.934021</td>\n",
       "      <td>-0.561240</td>\n",
       "      <td>Under</td>\n",
       "      <td>2.009924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>119 05 0 387.00</td>\n",
       "      <td>SINGLE FAMILY</td>\n",
       "      <td>2626  FOSTER AVE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NASHVILLE</td>\n",
       "      <td>2013-01-04</td>\n",
       "      <td>20130118-0006110</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.816534</td>\n",
       "      <td>CRAWL</td>\n",
       "      <td>1945</td>\n",
       "      <td>FRAME</td>\n",
       "      <td>C</td>\n",
       "      <td>-1.334877</td>\n",
       "      <td>-0.934021</td>\n",
       "      <td>-0.561240</td>\n",
       "      <td>Under</td>\n",
       "      <td>0.655253</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Index        Parcel ID       Land Use   Property Address  Suite/ Condo   #  \\\n",
       "0      1  105 11 0 080.00  SINGLE FAMILY   1802  STEWART PL               NaN   \n",
       "1      2  118 03 0 130.00  SINGLE FAMILY  2761  ROSEDALE PL               NaN   \n",
       "2      3  119 01 0 479.00  SINGLE FAMILY  224  PEACHTREE ST               NaN   \n",
       "3      4  119 05 0 186.00  SINGLE FAMILY      316  LUTIE ST               NaN   \n",
       "4      5  119 05 0 387.00  SINGLE FAMILY   2626  FOSTER AVE               NaN   \n",
       "\n",
       "  Property City  Sale Date   Legal Reference Sold As Vacant Multiple Parcels  \\\n",
       "0     NASHVILLE 2013-01-11  20130118-0006337             No               No   \n",
       "1     NASHVILLE 2013-01-18  20130124-0008033             No               No   \n",
       "2     NASHVILLE 2013-01-18  20130128-0008863             No               No   \n",
       "3     NASHVILLE 2013-01-23  20130131-0009929             No               No   \n",
       "4     NASHVILLE 2013-01-04  20130118-0006110             No               No   \n",
       "\n",
       "   ... Finished Area Foundation Type  Year Built Exterior Wall  Grade  \\\n",
       "0  ...     -0.711699         PT BSMT        1941         BRICK   C      \n",
       "1  ...      0.169879            SLAB        2000   BRICK/FRAME   C      \n",
       "2  ...      0.221151       FULL BSMT        1948   BRICK/FRAME   B      \n",
       "3  ...      0.055847           CRAWL        1910         FRAME   C      \n",
       "4  ...     -0.816534           CRAWL        1945         FRAME   C      \n",
       "\n",
       "   Bedrooms  Full Bath  Half Bath Sale Price Compared to Value  Property Age  \n",
       "0 -1.334877  -0.934021  -0.561240                         Over      0.810072  \n",
       "1 -0.124024   0.123862   1.528787                         Over     -1.473516  \n",
       "2  1.086829   0.123862  -0.561240                        Under      0.539138  \n",
       "3 -1.334877  -0.934021  -0.561240                        Under      2.009924  \n",
       "4 -1.334877  -0.934021  -0.561240                        Under      0.655253  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# View the cleansed dataset\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53d86558-3329-44c6-b388-845d9da21f8b",
   "metadata": {},
   "source": [
    "### PART 2: Decision Tree Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "ebeec475-188a-481c-859e-f74711449a26",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    1\n",
      "1    1\n",
      "2    0\n",
      "3    0\n",
      "4    0\n",
      "Name: Sale Price Compared to Value, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Correct column reference for target variable\n",
    "df['Sale Price Compared to Value'] = df['Sale Price Compared to Value'].map({'Over': 1, 'Under': 0})\n",
    "\n",
    "# Check if the column has been successfully encoded\n",
    "print(df['Sale Price Compared to Value'].head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "1f01f5d9-5444-4e61-8fde-67710983dc16",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split  \n",
    "from sklearn.ensemble import RandomForestClassifier  \n",
    "from sklearn.tree import DecisionTreeClassifier  \n",
    "from sklearn.metrics import classification_report, roc_auc_score, roc_curve\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "columns_to_drop = ['Index', 'Suite/ Condo   #', 'Sale Date'] \n",
    "df_cleaned = df.drop(columns=columns_to_drop)\n",
    "\n",
    "# Identify categorical columns for encoding\n",
    "categorical_cols = df_cleaned.select_dtypes(include=['object']).columns.tolist()\n",
    "\n",
    "# Exclude the target column 'Sale Price Compared to Value'\n",
    "if 'Sale Price Compared to Value' in categorical_cols:\n",
    "    categorical_cols.remove('Sale Price Compared to Value')\n",
    "\n",
    "# Use OneHotEncoder to encode categorical variables\n",
    "df_encoded = pd.get_dummies(df_cleaned, columns=categorical_cols, drop_first=True)\n",
    "\n",
    "# Define X (features) and y (target)\n",
    "X = df_encoded.drop(columns=['Sale Price Compared to Value'])  \n",
    "y = df_encoded['Sale Price Compared to Value']  \n",
    "\n",
    "# Split the data into training and test sets (80% training, 20% testing)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "9709cc9d-457b-423f-b34f-c70e4ec190ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Classification Report:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.34      0.22      0.27      1135\n",
      "           1       0.77      0.86      0.81      3382\n",
      "\n",
      "    accuracy                           0.70      4517\n",
      "   macro avg       0.56      0.54      0.54      4517\n",
      "weighted avg       0.66      0.70      0.67      4517\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Build the Decision Tree Classifier\n",
    "clf = DecisionTreeClassifier(random_state=42)\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred = clf.predict(X_test)\n",
    "\n",
    "# Print classification report for model evaluation\n",
    "print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f597f503-a7c3-4171-8caf-8e6f13a14582",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature Importance Table:\n",
      "                                         Importance\n",
      "Building Value                            0.080035\n",
      "Finished Area                             0.059427\n",
      "Acreage                                   0.049879\n",
      "Property Age                              0.039343\n",
      "Land Value                                0.034950\n",
      "...                                            ...\n",
      "Property Address_112  BART DR             0.000000\n",
      "Property Address_112  BEECH BEND CT       0.000000\n",
      "Property Address_112  BELLE MEADE BLVD    0.000000\n",
      "Property Address_112  BELLEVUE DR S       0.000000\n",
      "Grade_X                                   0.000000\n",
      "\n",
      "[62485 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "# Feature Importance\n",
    "feature_importances = pd.DataFrame(clf.feature_importances_, index=X_train.columns, columns=['Importance']).sort_values(by='Importance', ascending=False)\n",
    "print(\"Feature Importance Table:\\n\", feature_importances)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d2b8ccdf-8fc0-467e-a155-80540e06a850",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC Curve and AUC Score\n",
    "y_prob = clf.predict_proba(X_test)[:, 1]\n",
    "roc_auc = roc_auc_score(y_test, y_prob)\n",
    "fpr, tpr, thresholds = roc_curve(y_test, y_prob)\n",
    "\n",
    "# Plot ROC Curve\n",
    "plt.figure()\n",
    "plt.plot(fpr, tpr, label='Decision Tree (AUC = %0.2f)' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], 'k--')  # Diagonal line represents a random guess\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('ROC Curve for Decision Tree')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "758596ff-667e-4c62-883e-d2c70a933eaa",
   "metadata": {},
   "source": [
    "### PART 3:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "1cabdce5-3781-4ad5-a7c2-1778d08649c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting Random Forest training on a smaller sample...\n",
      "Training complete!\n",
      "Classification Report for Random Forest:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.00      0.00      0.00      1135\n",
      "           1       0.75      1.00      0.86      3382\n",
      "\n",
      "    accuracy                           0.75      4517\n",
      "   macro avg       0.37      0.50      0.43      4517\n",
      "weighted avg       0.56      0.75      0.64      4517\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import classification_report, roc_auc_score, roc_curve\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "# Reduce dataset size for quicker testing (10% of the training data)\n",
    "X_train_small = X_train.sample(frac=0.1, random_state=42)\n",
    "y_train_small = y_train[X_train_small.index]\n",
    "\n",
    "# Build the Random Forest Classifier with fewer trees and limited depth\n",
    "rf_clf = RandomForestClassifier(random_state=42, n_estimators=10, max_depth=5)  # Optimized for speed\n",
    "print(\"Starting Random Forest training on a smaller sample...\")\n",
    "rf_clf.fit(X_train_small, y_train_small)\n",
    "print(\"Training complete!\")\n",
    "\n",
    "# Make predictions on the test set\n",
    "y_pred_rf = rf_clf.predict(X_test)\n",
    "\n",
    "# Print classification report for model evaluation\n",
    "print(\"Classification Report for Random Forest:\\n\", classification_report(y_test, y_pred_rf))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "259c6b98-0eb8-4c40-be0a-776ec79efbb2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature Importance Table for Random Forest:\n",
      "                                     Importance\n",
      "Parcel ID_081 07 0 172.00             0.044988\n",
      "Parcel ID_083 06 0 331.00             0.044469\n",
      "Legal Reference_20160610-0058836      0.044420\n",
      "Sold As Vacant_Yes                    0.041848\n",
      "Neighborhood                          0.035285\n",
      "...                                        ...\n",
      "Property Address_1105  LISCHEY AVE    0.000000\n",
      "Property Address_1105  N 14TH ST      0.000000\n",
      "Property Address_1105  N 6TH ST       0.000000\n",
      "Property Address_1105  PENNOCK AVE    0.000000\n",
      "Grade_X                               0.000000\n",
      "\n",
      "[62485 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "# Feature Importance\n",
    "feature_importances_rf = pd.DataFrame(rf_clf.feature_importances_, index=X_train.columns, columns=['Importance']).sort_values(by='Importance', ascending=False)\n",
    "print(\"Feature Importance Table for Random Forest:\\n\", feature_importances_rf)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "bcfee0d8-78e5-436e-8edc-88e81f092323",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC Curve and AUC Score for Random Forest\n",
    "y_prob_rf = rf_clf.predict_proba(X_test)[:, 1]\n",
    "roc_auc_rf = roc_auc_score(y_test, y_prob_rf)\n",
    "fpr_rf, tpr_rf, thresholds_rf = roc_curve(y_test, y_prob_rf)\n",
    "\n",
    "# Plot ROC Curve\n",
    "plt.figure()\n",
    "plt.plot(fpr_rf, tpr_rf, label='Random Forest (AUC = %0.2f)' % roc_auc_rf)\n",
    "plt.plot([0, 1], [0, 1], 'k--')  # Diagonal line represents a random guess\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('ROC Curve for Random Forest')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "812f6a74-4867-4408-a179-ee06d6d76e52",
   "metadata": {},
   "source": [
    "### PART 4:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "95aab014-79f1-452a-b668-0a0979380b97",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting Gradient Boosting training on a very small sample...\n",
      "Training complete!\n",
      "Predictions complete!\n",
      "Classification Report for Gradient Boosting Classifier (small test set):\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.33      0.01      0.02       108\n",
      "           1       0.76      0.99      0.86       344\n",
      "\n",
      "    accuracy                           0.76       452\n",
      "   macro avg       0.55      0.50      0.44       452\n",
      "weighted avg       0.66      0.76      0.66       452\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "import pandas as pd\n",
    "\n",
    "# Reduce dataset size further for very quick testing (1% of the training data)\n",
    "X_train_small = X_train.sample(frac=0.01, random_state=42)\n",
    "y_train_small = y_train[X_train_small.index]\n",
    "\n",
    "# Build the Gradient Boosting Classifier with very few trees\n",
    "gb_clf = GradientBoostingClassifier(random_state=42, n_estimators=5, max_depth=3)\n",
    "print(\"Starting Gradient Boosting training on a very small sample...\")\n",
    "gb_clf.fit(X_train_small, y_train_small)\n",
    "print(\"Training complete!\")\n",
    "\n",
    "# Test on a small subset of the test set for quicker evaluation\n",
    "X_test_small = X_test.sample(frac=0.1, random_state=42)\n",
    "y_test_small = y_test[X_test_small.index]\n",
    "\n",
    "# Make predictions on the small test set\n",
    "y_pred_gb = gb_clf.predict(X_test_small)\n",
    "print(\"Predictions complete!\")\n",
    "\n",
    "# Print classification report for model evaluation\n",
    "print(\"Classification Report for Gradient Boosting Classifier (small test set):\\n\", classification_report(y_test_small, y_pred_gb))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "e0b16a21-7bee-4fdd-bb12-cd35e3def89d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature Importance Table for Gradient Boosting Classifier:\n",
      "                                      Importance\n",
      "Finished Area                          0.415696\n",
      "Neighborhood                           0.169410\n",
      "Building Value                         0.148691\n",
      "Acreage                                0.076567\n",
      "Parcel ID_105 09 0 136.00              0.042052\n",
      "...                                         ...\n",
      "Property Address_1105  JENNINGS ST     0.000000\n",
      "Property Address_1105  JONES ST        0.000000\n",
      "Property Address_1105  JOSEPH AVE      0.000000\n",
      "Property Address_1105  KIRKLAND AVE    0.000000\n",
      "Grade_X                                0.000000\n",
      "\n",
      "[62485 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "# Feature Importance\n",
    "feature_importances_gb = pd.DataFrame(gb_clf.feature_importances_, index=X_train.columns, columns=['Importance']).sort_values(by='Importance', ascending=False)\n",
    "print(\"Feature Importance Table for Gradient Boosting Classifier:\\n\", feature_importances_gb)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "450c581c-6135-45bf-84ea-ebbef943829d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC Curve and AUC Score for Gradient Boosting\n",
    "y_prob_gb = gb_clf.predict_proba(X_test)[:, 1]  \n",
    "roc_auc_gb = roc_auc_score(y_test, y_prob_gb)\n",
    "fpr_gb, tpr_gb, thresholds_gb = roc_curve(y_test, y_prob_gb)\n",
    "\n",
    "# Plot ROC Curve\n",
    "plt.figure()\n",
    "plt.plot(fpr_gb, tpr_gb, label='Gradient Boosting (AUC = %0.2f)' % roc_auc_gb)\n",
    "plt.plot([0, 1], [0, 1], 'k--')  \n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('ROC Curve for Gradient Boosting')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4a33667-46f1-4b44-95dc-40c46ce8d491",
   "metadata": {},
   "source": [
    "### PART 5:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6828f22f-667d-4e8c-b20a-f6117a93448f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Decision Tree Performance\n",
    "y_pred_dt = clf.predict(X_test)  \n",
    "dt_accuracy = accuracy_score(y_test, y_pred_dt)\n",
    "\n",
    "# Random Forest Performance\n",
    "y_pred_rf = rf_clf.predict(X_test)\n",
    "rf_accuracy = accuracy_score(y_test, y_pred_rf)\n",
    "\n",
    "# Gradient Boosting Performance\n",
    "y_pred_gb = gb_clf.predict(X_test)\n",
    "gb_accuracy = accuracy_score(y_test, y_pred_gb)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "ca702859-46ae-4fa0-849d-769cf9d362bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Performance Metrics:\n",
      "               Model  Accuracy  Precision (Class 1)  Recall (Class 1)  \\\n",
      "0      Decision Tree  0.697366             0.766887          0.856002   \n",
      "1      Random Forest  0.748727             0.748727          1.000000   \n",
      "2  Gradient Boosting  0.744078             0.749105          0.989651   \n",
      "\n",
      "   F1-Score (Class 1)  \n",
      "0            0.808998  \n",
      "1            0.856311  \n",
      "2            0.852739  \n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"
     ]
    }
   ],
   "source": [
    "# Consolidate into a DataFrame\n",
    "performance_metrics = pd.DataFrame({\n",
    "    'Model': ['Decision Tree', 'Random Forest', 'Gradient Boosting'],\n",
    "    'Accuracy': [dt_accuracy, rf_accuracy, gb_accuracy],\n",
    "    'Precision (Class 1)': [classification_report(y_test, y_pred_dt, output_dict=True)['1']['precision'], \n",
    "                            classification_report(y_test, y_pred_rf, output_dict=True)['1']['precision'], \n",
    "                            classification_report(y_test, y_pred_gb, output_dict=True)['1']['precision']],\n",
    "    'Recall (Class 1)': [classification_report(y_test, y_pred_dt, output_dict=True)['1']['recall'], \n",
    "                         classification_report(y_test, y_pred_rf, output_dict=True)['1']['recall'], \n",
    "                         classification_report(y_test, y_pred_gb, output_dict=True)['1']['recall']],\n",
    "    'F1-Score (Class 1)': [classification_report(y_test, y_pred_dt, output_dict=True)['1']['f1-score'], \n",
    "                           classification_report(y_test, y_pred_rf, output_dict=True)['1']['f1-score'], \n",
    "                           classification_report(y_test, y_pred_gb, output_dict=True)['1']['f1-score']]\n",
    "})\n",
    "\n",
    "# Display performance metrics table\n",
    "print(\"Model Performance Metrics:\")\n",
    "print(performance_metrics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "8bf2a930-24ae-4dd6-8652-271bee5b9b51",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Consolidated Feature Importance Table:\n",
      "                Decision Tree  Random Forest  Gradient Boosting\n",
      "Acreage              0.049879       0.000000           0.076567\n",
      "Neighborhood         0.022035       0.035285           0.169410\n",
      "Land Value           0.034950       0.000000           0.020324\n",
      "Building Value       0.080035       0.000000           0.148691\n",
      "Finished Area        0.059427       0.000000           0.415696\n",
      "...                       ...            ...                ...\n",
      "Grade_E              0.000000       0.000000           0.000000\n",
      "Grade_OFB            0.000000       0.000000           0.000000\n",
      "Grade_OFC            0.000000       0.000000           0.000000\n",
      "Grade_SSC            0.000000       0.000000           0.000000\n",
      "Grade_X              0.000000       0.000000           0.000000\n",
      "\n",
      "[62485 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "# Combine feature importances from the three models\n",
    "dt_feature_importance = pd.Series(clf.feature_importances_, index=X_train.columns, name='Decision Tree')\n",
    "rf_feature_importance = pd.Series(rf_clf.feature_importances_, index=X_train.columns, name='Random Forest')\n",
    "gb_feature_importance = pd.Series(gb_clf.feature_importances_, index=X_train.columns, name='Gradient Boosting')\n",
    "\n",
    "# Consolidate the feature importance scores into a DataFrame\n",
    "feature_importance_df = pd.concat([dt_feature_importance, rf_feature_importance, gb_feature_importance], axis=1)\n",
    "\n",
    "# Display consolidated feature importance table\n",
    "print(\"Consolidated Feature Importance Table:\")\n",
    "print(feature_importance_df)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "8a85df5c-efd3-44e0-905a-9877b17c7e45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ROC Curves for Decision Tree\n",
    "y_prob_dt = clf.predict_proba(X_test)[:, 1]\n",
    "roc_auc_dt = roc_auc_score(y_test, y_prob_dt)\n",
    "fpr_dt, tpr_dt, _ = roc_curve(y_test, y_prob_dt)\n",
    "\n",
    "# ROC Curves for Random Forest\n",
    "y_prob_rf = rf_clf.predict_proba(X_test)[:, 1]\n",
    "roc_auc_rf = roc_auc_score(y_test, y_prob_rf)\n",
    "fpr_rf, tpr_rf, _ = roc_curve(y_test, y_prob_rf)\n",
    "\n",
    "# ROC Curves for Gradient Boosting\n",
    "y_prob_gb = gb_clf.predict_proba(X_test)[:, 1]\n",
    "roc_auc_gb = roc_auc_score(y_test, y_prob_gb)\n",
    "fpr_gb, tpr_gb, _ = roc_curve(y_test, y_prob_gb)\n",
    "\n",
    "# Plot the ROC curves for all three models\n",
    "plt.figure(figsize=(8,6))\n",
    "plt.plot(fpr_dt, tpr_dt, label='Decision Tree (AUC = %0.2f)' % roc_auc_dt)\n",
    "plt.plot(fpr_rf, tpr_rf, label='Random Forest (AUC = %0.2f)' % roc_auc_rf)\n",
    "plt.plot(fpr_gb, tpr_gb, label='Gradient Boosting (AUC = %0.2f)' % roc_auc_gb)\n",
    "plt.plot([0, 1], [0, 1], 'k--')  \n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('ROC Curves for Decision Tree, Random Forest, and Gradient Boosting')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
